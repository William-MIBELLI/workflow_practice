name: "Build workflow"
on: push
jobs:
  lint:
    runs-on: ubuntu-latest
    outputs:
      NPMDIR: ${{ steps.npmDir.outputs.dir}}
    steps:
      - name: "Get code"
        uses: actions/checkout@v4
      - name: Get npm cache directory
        id: npmDir
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Caching dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.npmDir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
      - name: "Install dependencies"
        run: npm i
      - name: "Lint"
        run: npm run lint
  build:
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      script: ${{ steps.filename.outputs.value}}
    steps:
      - name: "Get code"
        uses: actions/checkout@v4
      - name: "Install dependencies"
        run: npm i
      - name: "Build"
        run: npm run build 
      - name: "User notification"
        run: echo "Build done."
      - name: Filename Output
        id: filename
        run: echo "value=zgeg" >> "$GITHUB_OUTPUT"
      - name: Upload artifcats
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: |
            /dist
            package.json
  getting_oupout:
    runs-on: ubuntu-latest
    needs: build
    env:
      OUTPUT_1: ${{ needs.build.outputs.script}}
    steps:
      - name: display output value
        run: echo "$OUTPUT_1"
      - name: Displaying context
        run: echo "${{ tojson(needs)}}"
      
           


        
